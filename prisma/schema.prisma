generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int       @id @default(autoincrement())
  name         String
  categoryId   Int       @map("category_id")
  category     Category  @relation(fields: [categoryId], references: [id])
  description  String?
  price        Float
  stockCount   Int       @default(0) @map("stock_count")
  brand        String
  imageUrl     String?   @map("image_url")
  isAvailable  Boolean   @default(true) @map("is_available")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at")
  reviews      Review[]
}

model Category {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  description  String?
  products     Product[]
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  email        String    @unique
  passwordHash String    @map("password_hash")
  firstName    String    @map("first_name")
  lastName     String    @map("last_name")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at")
  reviews      Review[]
}

model Review {
  id           Int       @id @default(autoincrement())
  productId    Int       @map("product_id")
  product      Product   @relation(fields: [productId], references: [id])
  userId       Int       @map("user_id")
  user         User      @relation(fields: [userId], references: [id])
  rating       Int
  comment      String
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at")
}